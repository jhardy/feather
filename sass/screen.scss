/* Welcome to Compass.
 * In this file you should write your main styles. (or centralize your imports)
 * Import this file using the following HTML or equivalent:
 * <link href="/stylesheets/screen.css" media="screen, projection" rel="stylesheet" type="text/css" /> */

/* apply a natural box layout model to all elements */
* { -moz-box-sizing: border-box; -webkit-box-sizing: border-box; box-sizing: border-box; }

/* The name for your prefix. String.*/
$feather-prefix: "span" !default;

/* The name for your prefix. String.*/
$feather-seperator: "-" !default;

/* Type of grid, true false */
$feather-fluid: true !default;
$feather-max-width: true;

$feather-column-count: 12 !default;
$feather-column-width: 60 !default;
$feather-gutter-width: 20 !default;
$feather-grid-unit: $feather-column-width + $feather-gutter-width !default;

// Full width of grid based on parameters above
$feather-full-grid: $feather-grid-unit * $feather-column-count;



/* Names for push and pull classes */
$feather-include-offset: true;
$feather-offset-name: "offset" !default;

$feather-include-pull: true;
$feather-pull-name: "pull" !default;

$feather-default-float: left !default;


@function unit($number, $context: $feather-full-grid) {
  @if $feather-fluid {
    @return percentage($number / $context);
  }
  @else {
    @return unquote($number + "px");
  }
}

@function grid($count, $context: $feather-full-grid) {
  $value: ($feather-grid-unit * $count);
  @return unit($value, $context);
}


@mixin pull($count, $context: $feather-full-grid) {
  $value: ($feather-grid-unit * $count) - $feather-gutter-width;
  margin-left:  unit($value * -1, $context);
}

@mixin offset($count, $context: $feather-full-grid) {
  $value: ($feather-grid-unit * $count) + $feather-gutter-width;
  margin-left:  unit($value, $context);
}


@mixin create-grid() {
 @for $i from 1 through $feather-column-count {
    .#{unquote($feather-prefix)}#{unquote($feather-seperator)}#{$i} {
      width: grid($i);
    }
  }
}

%container {
  margin: 0  auto;
  width: unit($feather-full-grid);
  @if $feather-max-width {
    max-width: $feather-full-grid + px;
  }
}

%parent-grid {
  padding-left: 0;
  padding-right: 0;
}

%row {
  margin-left: unit($feather-gutter-width * -1);

  &:after {
    content: "";
    display: table;
    clear: both;
  }
}

%column {
  float: $feather-default-float;
  padding-left: unit($feather-gutter-width/2);
  padding-right: unit($feather-gutter-width/2);
}

%one-fourth {
  width: 25%
}

%one-third {
  width: 33.33%;
}

%one-half {
  width: 50%;
}

[class*="#{$feather-prefix}#{$feather-seperator}"] {
  @extend %column;

  &.is-parent {
  @extend %parent-grid;
}
}

.container {
  @extend %container;
}





.col {
  float: left;
  background: #ccc;
  height: 50px;
  border-radius: 4px;
  text-align: center;
}

.row {
  @extend %row;
  margin-bottom: 20px;
}

.third {
  @extend %column;
  @extend %one-third;
}

.fourth {
  @extend %column;
  @extend %one-fourth;
}

.half {
  @extend %column;
  @extend %one-half;
}


.example {
  background: #eee;
  color: #333;
  text-align:  center;
  padding: 20px 0;
  margin-bottom: 20px;
}

@include create-grid;

@for $i from 1 through ($feather-column-count - 1) {
  .#{unquote($feather-offset-name)}-#{$i} {
    @include offset($i)
  }
}

@for $i from 1 through ($feather-column-count - 1) {
  .#{unquote($feather-pull-name)}-#{$i} {
    @include pull($i)
  }
}


.prefix,
.postfix {
  width: 200px;

  &.span {
    background: darken(#fff, 5%);
    border: 1px solid darken(#fff, 20%);
  }
}

